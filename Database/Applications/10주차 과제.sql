SQL> SELECT PLAYER_NAME 선수명, POSITION 포지션, BACK_NO 백넘버
  2  FROM PLAYER_T
  3  WHERE TEAM_ID=(SELECT TEAM_ID
  4  FROM PLAYER_T
  5  WHERE PLAYER_NAME='정남일')
  6  ORDER BY PLAYER_NAME;

SQL>  SELECT REGION_NAME 연고지명, TEAM_NAME 팀명, E_TEAM_NAME 영문팀명
  2  FROM TEAM
  3  WHERE TEAM_ID = (SELECT TEAM_ID
  4  FROM PLAYER
  5  WHERE PLAYER_NAME ='정현수')
  6  ORDER BY TEAM_NAME;

SQL>  SELECT REGION_NAME 연고지명, TEAM_NAME 팀명, E_TEAM_NAME 영문팀명
  2  FROM TEAM
  3  WHERE TEAM_ID IN (SELECT TEAM_ID
  4  FROM PLAYER
  5  WHERE PLAYER_NAME='정현수');

SQL> SELECT TEAM_ID 팀코드, PLAYER_NAME 선수명, POSITION 포지션, BACK_NO 백넘버, HEIGHT 키
  2  FROM PLAYER
  3  WHERE(TEAM_ID, HEIGHT) IN (SELECT TEAM_ID, MIN(HEIGHT)
  4  FROM PLAYER
  5  GROUP BY TEAM_ID)
  6  ORDER BY TEAM_ID, PLAYER_NAME;

SQL> SELECT T.TEAM_NAME 팀명, M.PLAYER_NAME 선수명, M.POSITION 포지션, M.BACK_NO 백넘버, M.HEIGHT 키
  2  FROM PLAYER M, TEAM T
  3  WHERE M.TEAM_ID=T.TEAM_ID
  4  AND M.HEIGHT < (SELECT AVG(S.HEIGHT)
  5  FROM PLAYER S
  6  WHERE S.TEAM_ID = M.TEAM_ID
  7  AND S.HEIGHT IS NOT NULL
  8  GROUP BY S.TEAM_ID)
  9  ORDER BY 선수명;

SQL> SELECT STADIUM_ID, STADIUM_NAME
  2  FROM STADIUM
  3  WHERE EXISTS (SELECT 1
  4  FROM SCHEDULE
  5  WHERE SCHE_DATE BETWEEN '20120501' AND '20120521');

SQL> UPDATE TEAM A
  2  SET A.STADIUM_NAME = (SELECT S.STADIUM_NAME
  3  FROM STRADIUM X
  4  WHERE X.STADIUM_ID = A.STADIUM_ID);

SQL> UPDATE TEAM A
  2  SET A.STADIUM_NAME = (SELECT S.STADIUM_NAME
  3  FROM STRADIUM X
  4  WHERE X.STADIUM_ID = A.STADIUM_ID)
  5  WHERE EXISTS (SELECT 1
  6  FROM STADIUM X
  7  WHERE X.STADIUM_ID = A.STADIUM_ID);

SQL> UPDATE TEAM A
  2  SET A.STADIUM_NAME =
  3  (SELECT NVL(MAX(X.STADIUM_NAME), A.STADIUM_NAME)
  4  FROM STADIUM X
  5  WHERE X.STADIUM_ID = A.STADIUM_ID);

SQL> SELECT EMPNO FROM
  2  (SELECT EMPNO, ENAME FROM EMP ORDER BY MGR);

SQL> SELECT MGR FROM
  2  (SELECT EMPNO, ENAME FROM EMP ORDER BY MGR);

SQL> SELECT T.TEAM_NAME 팀명, P.PLAYER_NAME 선수명, P.BACK_NO 백넘버
  2  FROM (SELECT TEAM_ID, PLAYER_NAME, BACK_NO
  3  FROM PLAYER
  4  WHERE POSITION='MF')P, TEAM T
  5  WHERE P.TEAM_ID = T.TEAM_ID
  6  ORDER BY 선수명;

SQL> SELECT D.DNAME 부서명, E.AVG_SAL 평균급여, E.MAX_SAL 최대급여
  2  FROM (SELECT DEPTNO, AVG(SAL) AVG_SAL, MAX(SAL) MAX_SAL
  3  FROM EMP
  4  GROUP BY DEPTNO) E, DEPT D
  5  WHERE E.DEPTNO = D.DEPTNO
  6  ORDER BY 부서명;

SQL> CREATE VIEW V_PLAYER_TEAM AS
  2  SELECT P.PLAYER_NAME, P.POSITION, P.BACK_NO, P.TEAM_ID, T.TEAM_NAME
  3  FROM PLAYER P, TEAM T
  4  WHERE P.TEAM_ID = T.TEAM_ID;

SQL> SELECT PLAYER_NAME, POSITION, BACK_NO, TEAM_ID, TEAM_NAME
  2  FROM V_PLAYER_TEAM
  3  WHERE PLAYER_NAME LIKE'황%';

SQL> SELECT PLAYER_NAME, POSITION, BACK_NO, TEAM_ID, TEAM_NAME
  2  FROM (SELECT P.PLAYER_NAME, P.POSITION, P.BACK_NO, P.TEAM_ID, T.TEAM_NAME
  3  FROM PLAYER P, TEAM T
  4  WHERE P.TEAM_ID = T.TEAM_ID)
  5  WHERE PLAYER_NAME LIKE '황%';

SQL> CREATE VIEW V_PLAYER_TEAM_FILTER AS
  2  SELECT PLAYER_NAME, POSITION, BACK_NO, TEAM_NAME
  3  FROM V_PLAYER_TEAM
  4  WHERE POSITION IN ('GK', 'MF');

SQL> DROP VIEW V_PLAYER_TEAM;

SQL> DROP VIEW V_PLAYER_TEAM_FILTER;

SQL> SELECT EMPNO, ENAME, (SELECT DNAME FROM DEPT WHERE DEPTNO = A.DEPTNO) DNAME
  2  FROM EMP A;

SQL> SELECT EMPNO, ENAME, (SELECT GRADE FROM SALGRADE WHERE EMP.SAL BETWEEN LOSAL AND HISAL)
  2  AS GRADE
  3  FROM EMP;

SQL> SELECT EMPNO, ENAME, SUBSTR((SELECT DNAME FROM DEPT WHERE DEPTNO = E.DEPTNO),
  2  1, 3)
  3  AS DEPARTMENT_NAME
  4  FROM EMP E;

SQL> SELECT EMPNO, ENAME
  2  FROM EMP E
  3  WHERE (SELECT DNAME FROM DEPT WHERE DEPTNO = E.DEPTNO)
  4  = (SELECT DNAME FROM DEPT_2 WHERE DEPTNO = E.DEPTNO);

SQL> SELECT EMPNO, ENAME, DEPTNO
  2  FROM EMP E
  3  ORDER BY (SELECT DNAME FROM DEPT WHERE DEPTNO = E.DEPTNO);


SQL> SELECT EMPNO, ENAME, DEPTNO, (CASE WHEN DEPTNO IN (SELECT DEPTNO FROM DEPT)
  2  THEN 'USA'
  3  ELSE 'OTHER COUNTRY'
  4  END) LOCATION
  5  FROM EMP E;

SQL> SELECT EMPNO, ENAME, DEPTNO, (CASE WHEN DEPTNO = 20
  2  THEN (SELECT DNAME FROM DEPT WHERE DEPTNO = 10)
  3  ELSE (SELECT DNAME FROM DEPT WHERE DEPTNO = 30)
  4  END) AS NEW_DEPARTMENT
  5  FROM EMP E;

SQL> SELECT P.TEAM_ID 팀코드, T.TEAM_NAME 팀명, AVG(P.HEIGHT) 평균키
  2  FROM PLAYER P, TEAM T
  3  WHERE P.TEAM_ID = T.TEAM_ID
  4  GROUP BY P.TEAM_ID, T.TEAM_NAME
  5  HAVING AVG(P.HEIGHT) < (SELECT AVG(HEIGHT) FROM PLAYER WHERE TEAM_ID = 'K02');

SQL> SELECT DNAME, JOB, COUNT(*) "Total Empl", SUM(SAL) "Total Sal"
  2  FROM EMP, DEPT
  3  WHERE DEPT.DEPTNO = EMP.DEPTNO
  4  GROUP BY DNAME, JOB;

SQL> SELECT DNAME, JOB, COUNT(*) "Total Empl", SUM(SAL) "Total Sal"
  2  FROM EMP, DEPT
  3  WHERE DEPT.DEPTNO = EMP.DEPTNO
  4  GROUP BY DNAME, JOB
  5  ORDER BY DNAME, JOB;

SQL> SELECT DNAME, JOB, COUNT(*) "Total Empl", SUM(SAL) "Total Sal"
  2  FROM EMP, DEPT
  3  WHERE DEPT.DEPTNO = EMP.DEPTNO
  4  GROUP BY ROLLUP (DNAME, JOB);

SQL> SELECT DNAME, JOB, COUNT(*) "Total Empl", SUM(SAL) "Total Sal"
  2  FROM EMP, DEPT
  3  WHERE DEPT.DEPTNO = EMP.DEPTNO
  4  GROUP BY ROLLUP (DNAME, JOB)
  5  ORDER BY DNAME, JOB;

SQL> SELECT DNAME, GROUPING(DNAME), JOB, GROUPING(JOB), COUNT(*) "Total Empl", SUM(SAL) "Total Sal"
  2  FROM EMP, DEPT
  3  WHERE DEPT.DEPTNO = EMP.DEPTNO
  4  GROUP BY ROLLUP (DNAME, JOB);

SQL> SELECT CASE GROUPING(DNAME)
  2  WHEN 1 THEN 'All Departments'
  3  ELSE DNAME END AS DNAME,
  4  CASE GROUPING(JOB)
  5  WHEN 1 THEN 'All Jobs'
  6  ELSE JOB END AS JOB,
  7  COUNT(*) "Total Empl",
  8  SUM(SAL) "Total Sal"
  9  FROM EMP, DEPT
 10  WHERE DEPT.DEPTNO = EMP.DEPTNO
 11  GROUP BY ROLLUP(DNAME, JOB);

SQL> SELECT CASE GROUPING(DNAME)
  2  WHEN 1 THEN 'All Departments'
  3  ELSE DNAME END AS DNAME,
  4  CASE GROUPING(JOB)
  5  WHEN 1 THEN 'All Jobs'
  6  ELSE JOB END AS JOB,
  7  COUNT(*) "Total Empl",
  8  SUM(SAL) "Total Sal"
  9  FROM EMP, DEPT
 10  WHERE DEPT.DEPTNO = EMP.DEPTNO
 11  GROUP BY DNAME, ROLLUP(JOB);

SQL> SELECT DNAME, JOB, MGR, SUM(SAL) "Total Sal"
  2  FROM EMP, DEPT
  3  WHERE DEPT.DEPTNO = EMP.DEPTNO
  4  GROUP BY ROLLUP(DNAME, (JOB, MGR));

SQL> SELECT CASE GROUPING(DNAME)
  2  WHEN 1 THEN 'All Departments'
  3  ELSE DNAME END AS DNAME,
  4  CASE GROUPING(JOB)
  5  WHEN 1 THEN 'All Jobs'
  6  ELSE JOB END AS JOB,
  7  COUNT(*) "Total Empl",
  8  SUM(SAL) "Total Sal"
  9  FROM EMP, DEPT
 10  WHERE DEPT.DEPTNO = EMP.DEPTNO
 11  GROUP BY CUBE (DNAME, JOB);

SQL> SELECT DNAME, JOB, COUNT(*) "Total Empl", SUM(SAL) "Total Sal"
  2  FROM EMP, DEPT
  3  WHERE DEPT.DEPTNO = EMP.DEPTNO
  4  GROUP BY DNAME, JOB
  5  UNION ALL
  6  SELECT DNAME, 'All Jobs', COUNT(*) "Total Empl", SUM(SAL) "Total Sal"
  7  FROM EMP, DEPT
  8   WHERE DEPT.DEPTNO = EMP.DEPTNO
  9  GROUP BY DNAME
 10  UNION ALL
 11  SELECT 'All Departments', JOB, COUNT(*) "Total Empl", SUM(SAL) "Total Sal"
 12   FROM EMP, DEPT
 13  WHERE DEPT.DEPTNO = EMP.DEPTNO;

SQL> SELECT DNAME, 'All Jobs' JOB, COUNT(*) "Total Empl", SUM(SAL) "Total Sal"
  2  FROM EMP DEPT
  3  WHERE DEPT.DEPTNO = EMP.DEPTNO
  4  GROUP BY DNAME
  5  UNION ALL
  6  SELECT 'All Departments' DNAME, JOB, COUNT(*) "Total Empl", SUM(SAL) "Total Sal"
  7  FROM EMP, DEPT
  8  WHERE DEPT.DEPTNO = EMP.DEPTNO
  9  GROUP BY JOB;

SQL> SELECT DECODE(GROUPING(DNAME), 1, 'All Departments', DNAME) AS DNAME,
  2  DECODE(GROUPING(JOB), 1, 'All Jobs', JOB) AS JOB,
  3  COUNT(*) "Total Empl", SUM(SAL) "Total Sal"
  4  FROM EMP, DEPT
  5  WHERE DEPT.DEPTNO = EMP.DEPTNO
  6  GROUP BY GROUPING SETS (DNAME, JOB);

SQL> SELECT DNAME, JOB, MGR, SUM(SAL) "Total Sal"
  2  FROM EMP, DEPT
  3  WHERE DEPT.DEPTNO = EMP.DEPTNO
  4  GROUP BY GROUPING SETS
  5  ((DNAME, JOB, MGR), (DNAME, JOB), (JOB, MGR));

